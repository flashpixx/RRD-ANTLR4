general:
    branches:
        only:
            - master
        ignore:
            - developing
            - /hotfix-.*/
            - /release-.*/
            - /support-.*/
            - /dev-.*/
            - /gh-.*/
            - /binary-.*/

machine:
    timezone:
        Europe/Berlin

    environment:
        GIT_AUTHOR_NAME: CircleCI
        GIT_AUTHOR_EMAIL: info@flashpixx.de
        GIT_COMMITTER_NAME: CircleCI
        GIT_COMMITTER_EMAIL: info@flashpixx.de

    java:
        version: oraclejdk8


dependencies:
    pre:
        - sudo apt-get install graphviz npm
        - npm install -g bower
        - wget -O /tmp/doxygen.tar.gz http://ftp.stack.nl/pub/users/dimitri/doxygen-${DOXYGEN_VERSION}.linux.bin.tar.gz && tar xf /tmp/doxygen.tar.gz -C /tmp


checkout:
    post:
        - git clean -xdf
        - git fetch -p
        - git gc --prune=now
        - mvn clean dependency:purge-local-repository -DreResolve=false -DactTransitively=true


test:
    override:
        - mvn package -Dbuild.number=${CIRCLE_BUILD_NUM} -Dcoverall.token=${COVERALL_TOKEN} -Dbuild.commit=${CIRCLE_SHA1} -DperformRelease=false -DskipTests=true

    post:
        # documentation and test build
        - mvn site coveralls:report -Dbuild.number=${CIRCLE_BUILD_NUM} -Dbuild.commit=${CIRCLE_SHA1} -Dcoverall.token=${COVERALL_TOKEN}
        # Maven Site CircleCI build
        - mkdir -p $CIRCLE_TEST_REPORTS/junit/
        - find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;


deployment:
    production:
        branch: master
        commands:
            - mv -f target/site /tmp
            - FILENAME=$(cat target/classes/de/flashpixx/rrd_antlr4/configuration.properties | grep -i finalname | cut -d"=" -f2) && mv -f target/$FILENAME /tmp
            # documentation deployment to gh-pages
            - git push origin :gh-pages || true
            - git branch -D gh-pages || true
            - git checkout --orphan gh-pages
            - rm -Rf *
            - mv -f /tmp/site/* .
            - echo -e 'general:\n    branches:\n        ignore:\n            - gh-pages\n' > circle.yml
            - echo -e '*.*\n!.gitignore\n!circle.yml\n!*.htm*\n!*.css\n!*.js\n!*.png\n!*.gif\n!*.svg\n!*.json\n!*.g4\n' > .gitignore
            - git add --all .
            - git commit -m "current documentation"
            - git push origin gh-pages
            # binary deployment to binary
            - git push origin :binary-$CIRCLE_BRANCH || true
            - git brach -D binary-$CIRCLE_BRANCH || true
            - git checkout --orphan binary-$CIRCLE_BRANCH
            - rm -Rf *
            - mv -f /tmp/*.jar .
            - mv -f /tmp/*.dmg .
            - mv -f /tmp/*.exe .
            - echo "# Railroad Diagram Generator for ANTLR 4 - Standalone Binary" > readme.md
            - echo -e 'general:\n    branches:\n        ignore:\n            - ${CIRCLE_BRANCH}\n' > circle.yml
            - echo -e '*.*\n!.gitignore\n!circle.yml\n!*.jar\n!*.dmg\n!*.exe\n' > .gitignore
            - git add --all .
            - git commit -m "current documentation"
            - git push origin gh-pages
            - git add --all .
            - git commit -m "bindary"
            - git push origin binary-$CIRCLE_BRANCH